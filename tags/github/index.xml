<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on Agones</title>
    <link>http://localhost:1313/tags/github/</link>
    <description>Recent content in GitHub on Agones</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>hari@dasarpai.com (Hari Thapliyaal)</managingEditor>
    <webMaster>hari@dasarpai.com (Hari Thapliyaal)</webMaster>
    <lastBuildDate>Thu, 08 May 2025 11:34:17 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with GitHub from WSL and Windows Folders</title>
      <link>http://localhost:1313/dsblog/working-with-github-from-wsl-and-windows-folders/</link>
      <pubDate>Sun, 02 Mar 2025 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/working-with-github-from-wsl-and-windows-folders/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6234-Working-with-Github-from-WSL-and-Windows-Folders.jpg&#34; alt=&#34;Working with GitHub from WSL and Windows Folders&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;problem-statement&#34;&gt;Problem Statement:&lt;/h2&gt;&#xA;&lt;p&gt;I have project in D:\github-blog\dasarpai-websitetest. This is also a github repo. It&amp;rsquo;s remote repo is &lt;a href=&#34;https://github.com/dasarpai/dasarpai-websitetest&#34;&gt;https://github.com/dasarpai/dasarpai-websitetest&lt;/a&gt;. I have github desktop for windows 11 installed on my machine. Sometime I push/pull files in github repo using this github desktop. I have Visual Code IDE installed on my windows 11 machine and I also visual code IDE on my machine&amp;rsquo;s wsl.&lt;/p&gt;&#xA;&lt;p&gt;When I am working with this project from windows 11 or wsl then sometimes file will get updated.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up a Development Environment with Windows 11, WSL2 and Docker</title>
      <link>http://localhost:1313/dsblog/development-environment-with-windows-11-wsl2-and-docker/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/development-environment-with-windows-11-wsl2-and-docker/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6222-Setting-Up-a-Development-Environment-with-Windows-11-WSL2-and-Docker.jpg&#34; alt=&#34;Setting Development Environment with WSL2, Docker and Github&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;setting-development-environment-with-wsl2-docker-and-github&#34;&gt;Setting Development Environment with WSL2, Docker and Github&lt;/h1&gt;&#xA;&lt;p&gt;This quick tutorial is about setting Up a Development Environment with Windows 11, WSL 2, Docker and Github&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Like any other operating system, Windows has its strengths and weaknesses. But what if you believe that the democratization of technology is best achieved through open-source solutions, and that Linux is the key to this future? Whatâ€™s the next step for you?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering Git: Comprehensive Guide to Git Commands</title>
      <link>http://localhost:1313/dsblog/Git-Comprehensive-Guide/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/Git-Comprehensive-Guide/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6155-Comprehensive-Guide-to-Git-Commands.jpg&#34; alt=&#34;Mastering Git: Comprehensive Guide to Git Commands&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;comprehensive-guide-to-git-commands&#34;&gt;Comprehensive Guide to Git Commands&lt;/h1&gt;&#xA;&lt;h2 id=&#34;is-this-article-for-me&#34;&gt;Is this article for me?&lt;/h2&gt;&#xA;&lt;p&gt;If you are a developer and you want to learn Git commands and their usage, this article is for you. If you are a data scientist and you want to learn Git commands and their usage, this article is also for you. If you are a manager and you want to get familiarize about git commands so that you know what your team is talking about then, this article is also for you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring Github</title>
      <link>http://localhost:1313/dsblog/Exploring-Github/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/Exploring-Github/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6142-Exploring-Github.jpg&#34; alt=&#34;Exploring Github&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;exploring-github&#34;&gt;Exploring Github&lt;/h1&gt;&#xA;&lt;h2 id=&#34;question-what-is-github-package-and-what-can-i-do-with-this&#34;&gt;Question: What is github package and what can I do with this?&lt;/h2&gt;&#xA;&lt;p&gt;GitHub Packages is a service that allows you to host and manage packages (e.g., code libraries, Docker containers) within GitHub. Here&amp;rsquo;s a breakdown of what you can do or achieve with GitHub Packages:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-host-and-share-packages&#34;&gt;1. &lt;strong&gt;Host and Share Packages&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Languages Supported&lt;/strong&gt;: You can host packages for multiple programming languages, such as:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;npm&lt;/strong&gt; (JavaScript/Node.js)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Maven&lt;/strong&gt; (Java)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;NuGet&lt;/strong&gt; (C#/.NET)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RubyGems&lt;/strong&gt; (Ruby)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt; (PyPI)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; (Container images)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Share Packages&lt;/strong&gt;: You can share packages publicly or privately within an organization or with collaborators.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-seamless-integration-with-github-repositories&#34;&gt;2. &lt;strong&gt;Seamless Integration with GitHub Repositories&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can tightly integrate packages with GitHub repositories. This allows for automated versioning, releasing, and managing packages in tandem with your code changes.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Release Automation&lt;/strong&gt;: Automate package publishing during a GitHub release or via CI/CD pipelines (GitHub Actions).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-versioning-and-dependency-management&#34;&gt;3. &lt;strong&gt;Versioning and Dependency Management&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub Packages supports semantic versioning. This means you can publish new versions of your package and manage dependencies within your projects.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dependency Graph&lt;/strong&gt;: View dependencies in your repository, understand their relationships, and check for vulnerabilities.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Link with Code&lt;/strong&gt;: GitHub Packages is linked with repositories, so you can easily trace which version of your package is linked with which repository or commit.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-private-package-hosting&#34;&gt;4. &lt;strong&gt;Private Package Hosting&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Host private packages that are accessible only to specific people, teams, or organizations.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Role-based Access Control&lt;/strong&gt;: Control who can view, download, or publish to your packages using GitHub&amp;rsquo;s role-based access.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-container-hosting-docker-and-oci-images&#34;&gt;5. &lt;strong&gt;Container Hosting (Docker and OCI Images)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use GitHub Packages as a Docker registry to store and manage your Docker images.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Build &amp;amp; Deploy Containers&lt;/strong&gt;: Automate the building and publishing of Docker images via GitHub Actions and deploy them using platforms like Kubernetes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6-integrate-with-github-actions&#34;&gt;6. &lt;strong&gt;Integrate with GitHub Actions&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can automate the entire package lifecycle (build, test, publish) using GitHub Actions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CI/CD Pipelines&lt;/strong&gt;: Use GitHub Actions to automatically publish packages whenever code is merged, tests pass, or new releases are created.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7-security-and-auditing&#34;&gt;7. &lt;strong&gt;Security and Auditing&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Signed Packages&lt;/strong&gt;: GitHub Packages can be configured to require packages to be signed, adding an extra layer of security.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Package Scanning&lt;/strong&gt;: GitHub also scans packages for known vulnerabilities, helping you avoid security risks in your dependencies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;8-search-and-discovery&#34;&gt;8. &lt;strong&gt;Search and Discovery&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Discover Public Packages&lt;/strong&gt;: Search for public packages published by other users or organizations.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tagging and Labeling&lt;/strong&gt;: Use tags and labels to categorize your packages, making them easier to find and manage.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;9-package-insights-and-usage-metrics&#34;&gt;9. &lt;strong&gt;Package Insights and Usage Metrics&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;View download statistics, such as how many times a package has been downloaded, and track overall usage trends.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Repository Insights&lt;/strong&gt;: See which repositories are consuming or contributing to your packages.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;10-custom-registries&#34;&gt;10. &lt;strong&gt;Custom Registries&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub allows you to host your own private or public package registries for your team or organization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;use-cases-for-github-packages&#34;&gt;Use Cases for GitHub Packages:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Publishing Libraries&lt;/strong&gt;: Share reusable libraries and code modules (e.g., npm packages, Python libraries) with teams or the public.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Managing Internal Tools&lt;/strong&gt;: Host internal dependencies or tools that are not meant to be shared publicly.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Docker Image Management&lt;/strong&gt;: Manage and distribute Docker images for deploying applications.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Automated Releases&lt;/strong&gt;: Build automated pipelines to publish, test, and deploy code to production environments.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;GitHub Packages is particularly useful for teams or individuals who want a fully integrated solution to manage both their source code and dependencies in one place.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
