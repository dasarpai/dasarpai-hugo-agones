<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Best Practices on Agones</title>
    <link>http://localhost:1313/tags/best-practices/</link>
    <description>Recent content in Best Practices on Agones</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>hari@dasarpai.com (Hari Thapliyaal)</managingEditor>
    <webMaster>hari@dasarpai.com (Hari Thapliyaal)</webMaster>
    <lastBuildDate>Thu, 08 May 2025 11:34:17 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/best-practices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Project Folders and Files</title>
      <link>http://localhost:1313/dsblog/Python-Project-Folders-and-Files/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/Python-Project-Folders-and-Files/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6145-Python-Project-Folders-and-Files.jpg&#34; alt=&#34;Python Project Folders and Files&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;understanding-python-project-folder-structures-essential-directories-explained&#34;&gt;Understanding Python Project Folder Structures: Essential Directories Explained&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In Python projects, certain folders and files serve specific purposes to help with organizing code, managing dependencies, setting up environments, and handling version control. These important directories and files are often seen in most well-structured Python projects. Here are some of the most common ones:&lt;/p&gt;&#xA;&lt;h2 id=&#34;question-what-are-key-folders-and-files-in-python-project&#34;&gt;Question: What are key folders and files in Python Project?&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-venv&#34;&gt;1. &lt;strong&gt;&lt;code&gt;venv&lt;/code&gt; / &lt;code&gt;.venv&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: This is a &lt;strong&gt;virtual environment&lt;/strong&gt; folder that contains all the dependencies installed for a project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Virtual environments isolate dependencies for each project so that you avoid conflicts between versions of packages that different projects might use.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Local development environments where Python packages are installed per project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;How it&amp;rsquo;s created&lt;/strong&gt;: Using &lt;code&gt;python -m venv venv&lt;/code&gt; or &lt;code&gt;python -m venv .venv&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-env&#34;&gt;2. &lt;strong&gt;&lt;code&gt;env&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: This folder contains environment-specific variables, typically used for storing configuration secrets like API keys and database credentials. Do not confuse this with venv or .venv folder which has virtual environment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Keeping sensitive information outside the codebase is a security best practice.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Most Python projects, where &lt;code&gt;.env&lt;/code&gt; files are used with packages like &lt;code&gt;python-dotenv&lt;/code&gt; to load environment variables.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-scripts&#34;&gt;3. &lt;strong&gt;&lt;code&gt;scripts&lt;/code&gt; or &lt;code&gt;bin&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Contains custom scripts or executable files that are part of the project. Do not confuse this folder with venv/Script folder.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: This folder is useful for organizing command-line tools or automation scripts that are part of the project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Projects that require custom scripts for deployment, automation, or management.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-config&#34;&gt;4. &lt;strong&gt;&lt;code&gt;config&lt;/code&gt; or &lt;code&gt;settings&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Stores configuration files or settings, often in formats like JSON, YAML, or &lt;code&gt;.ini&lt;/code&gt;. Some frameworks (like Django) use this folder for their settings.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Keeping configuration in a separate folder helps modularize your project, especially for different environments (e.g., &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Any project that requires multiple environments or has a complex configuration.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-build&#34;&gt;5. &lt;strong&gt;&lt;code&gt;build&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; Folders&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: These folders contain the &lt;strong&gt;compiled distributions&lt;/strong&gt; of your package, typically generated by tools like &lt;code&gt;setuptools&lt;/code&gt; or &lt;code&gt;poetry&lt;/code&gt; when packaging your project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: If you&amp;rsquo;re distributing your project as a package (e.g., on PyPI), these folders hold the files that get uploaded.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Python projects that are packaged and distributed as libraries or applications.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;How it&amp;rsquo;s created&lt;/strong&gt;: Using &lt;code&gt;python setup.py sdist&lt;/code&gt; or &lt;code&gt;poetry build&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6-src&#34;&gt;6. &lt;strong&gt;&lt;code&gt;src&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Some projects store all their source code inside a &lt;code&gt;src/&lt;/code&gt; directory to make the distinction between code and other project files.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: It helps enforce a cleaner project structure and avoids accidental import issues, where test files or other modules might be wrongly imported.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Medium to large-sized projects where organization is critical.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7-docs&#34;&gt;7. &lt;strong&gt;&lt;code&gt;docs&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Contains project documentation, such as API references, guides, and other written materials.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Good documentation helps users and contributors understand how to use and contribute to the project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Larger open-source or professional projects.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: This folder often contains &lt;code&gt;Sphinx&lt;/code&gt; or &lt;code&gt;MkDocs&lt;/code&gt; configuration files for generating HTML or PDF documentation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;8-migrations&#34;&gt;8. &lt;strong&gt;&lt;code&gt;migrations&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: If using a web framework like Django, this folder contains migration files that track changes to the database schema.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Migrations allow for smooth upgrades and downgrades of your database schema over time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Projects that use an ORM (Object-Relational Mapper) like Django&amp;rsquo;s or SQLAlchemy&amp;rsquo;s migration system.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;9-git&#34;&gt;9. &lt;strong&gt;&lt;code&gt;.git&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: This is a hidden folder that Git uses to track all version control information for your project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: It stores the entire history of changes to your code, along with branch information, commit data, and more.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Any project that is tracked using Git (and typically hosted on platforms like GitHub, GitLab, etc.).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;How it&amp;rsquo;s created&lt;/strong&gt;: By initializing a Git repository with &lt;code&gt;git init&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;10-notebooks&#34;&gt;10. &lt;strong&gt;&lt;code&gt;notebooks&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Holds Jupyter notebooks (&lt;code&gt;.ipynb&lt;/code&gt; files) for interactive code, data exploration, or tutorials.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: This is especially useful for projects related to data science, machine learning, or educational materials.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Data science and machine learning projects, as well as educational repositories.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11-tests&#34;&gt;11. &lt;strong&gt;&lt;code&gt;tests&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Contains test cases and test scripts for your project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Having a dedicated &lt;code&gt;tests&lt;/code&gt; folder makes it easier to organize and run unit tests, ensuring the reliability of your code.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Any professional Python project following good development practices.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Python projects often use testing frameworks like &lt;code&gt;unittest&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt;, or &lt;code&gt;nose&lt;/code&gt; to write and run tests in this folder.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-__pycache__&#34;&gt;12. &lt;strong&gt;&lt;code&gt;__pycache__&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Python stores compiled bytecode in this folder to speed up module loading.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: It helps Python run faster by storing the compiled versions of your scripts so that they don’t need to be recompiled each time they are run.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Any Python project or module once the code has been executed.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;How it&amp;rsquo;s created&lt;/strong&gt;: Automatically generated by Python when running scripts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-static&#34;&gt;13. &lt;strong&gt;&lt;code&gt;static&lt;/code&gt; or &lt;code&gt;assets&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Stores static files such as images, CSS, JavaScript, etc., used in web projects.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: Web projects, especially in frameworks like Django or Flask, need a place to keep static files that are served directly to the client.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Web development projects.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;14-data&#34;&gt;14. &lt;strong&gt;&lt;code&gt;data&lt;/code&gt; Folder&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Stores raw or processed datasets that are used in the project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why it&amp;rsquo;s important&lt;/strong&gt;: In data science or machine learning projects, keeping datasets organized is crucial for reproducibility and versioning.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commonly Seen In&lt;/strong&gt;: Data science and machine learning projects.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;summary-of-common-folders-in-a-python-project&#34;&gt;Summary of Common Folders in a Python Project:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;.venv&lt;/code&gt;/&lt;code&gt;venv&lt;/code&gt;: Virtual environment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;__pycache__&lt;/code&gt;: Compiled bytecode.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tests&lt;/code&gt;: Test cases.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Source code.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: Documentation.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;build&lt;/code&gt;/&lt;code&gt;dist&lt;/code&gt;: Distribution files.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;migrations&lt;/code&gt;: Database migrations.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;.git&lt;/code&gt;: Git version control.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;notebooks&lt;/code&gt;: Jupyter notebooks.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;config&lt;/code&gt;: Configuration files.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;static&lt;/code&gt;/&lt;code&gt;assets&lt;/code&gt;: Static files for web apps.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;scripts&lt;/code&gt;: Custom scripts.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: Datasets.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;By organizing these folders properly, Python projects can be easier to navigate, maintain, and collaborate on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ML Model Development Framework</title>
      <link>http://localhost:1313/dsblog/ML-Model-Development-Framework/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/ML-Model-Development-Framework/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6096-ML-Model-Development-Framework.jpg&#34; alt=&#34;ML Model Development Framework&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;ml-model-development-framework--model-repositories&#34;&gt;ML Model Development Framework &amp;amp; Model Repositories&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;There are hundreds of &lt;a href=&#34;http://localhost:1313/dsblog/nlp-tasks&#34;&gt;machine learning tasks&lt;/a&gt;. To do these tasks there are &lt;a href=&#34;http://localhost:1313/dsblog/Type-of-Databases&#34;&gt;thousands of datasets&lt;/a&gt; created by individuals, governments, and corporations. We need to develop AI models using these datasets. There are thousands of models &lt;a href=&#34;dsblog/ML-Model-Repository-from-Pinto0309&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://localhost:1313/dsblog/paperwithcode-resources&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;http://localhost:1313/dsblog/What-Are-Transformers-in-AI&#34;&gt;3&lt;/a&gt; and many model development frameworks. It is practically mind-blowing to track this whole body of work and understand all this work in its entirety. But if you dive deeper into the following frameworks you will get a fair idea about the overall direction of the work. These frameworks are used to maintain pre-trained model repositories and download pre-trained models. You can develop your own finetuned model using those pre-trained models.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Naming Convention</title>
      <link>http://localhost:1313/dsblog/Python-Naming-Convention/</link>
      <pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/Python-Naming-Convention/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6072-Python-Naming-Convention.jpg&#34; alt=&#34;Python Naming Convention&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;python-naming-convention&#34;&gt;Python Naming Convention&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;UPPERCASE / UPPER_CASE_WITH_UNDERSCORES =&amp;gt; module-level constants&lt;/li&gt;&#xA;&lt;li&gt;lowercase / lower_case_with_underscores =&amp;gt; for variable and function name.&lt;/li&gt;&#xA;&lt;li&gt;CapitalizedWords (or CapWords, or CamelCase – so named because of the bumpy look of its letters [4]). This is also sometimes known as StudlyCaps. =&amp;gt; CamelCase =&amp;gt; Class&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Note: When using acronyms in CapWords, capitalize all the letters of the acronym. Thus HTTPServerError is better than HttpServerError.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;mixedCase (differs from CapitalizedWords by initial lowercase character!)&lt;/li&gt;&#xA;&lt;li&gt;Capitalized_Words_With_Underscores (ugly!)&lt;/li&gt;&#xA;&lt;li&gt;_single_leading_underscore: weak “internal use” indicator. E.g. from M import * does not import objects whose names start with an underscore.&lt;/li&gt;&#xA;&lt;li&gt;single_trailing_underscore_: used by convention to avoid conflicts with Python keyword, e.g.&#xA;tkinter.Toplevel(master, class_=&amp;lsquo;ClassName&amp;rsquo;)&lt;/li&gt;&#xA;&lt;li&gt;__double_leading_underscore: when naming a class attribute, invokes name mangling (inside class FooBar, __boo becomes _FooBar__boo; see below).&lt;/li&gt;&#xA;&lt;li&gt;_&lt;em&gt;double_leading_and_trailing_underscore&lt;/em&gt;_: “magic” objects or attributes that live in user-controlled namespaces. E.g. _&lt;em&gt;init&lt;/em&gt;_, _&lt;em&gt;import&lt;/em&gt;_ or _&lt;em&gt;file&lt;/em&gt;_. Never invent such names; only use them as documented.&lt;/li&gt;&#xA;&lt;li&gt;Never use the characters ‘l’ (lowercase letter el), ‘O’ (uppercase letter oh), or ‘I’ (uppercase letter eye) as single character variable names.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;programming-recommendations&#34;&gt;Programming Recommendations&lt;/h1&gt;&#xA;&lt;h2 id=&#34;use-is-not-operator&#34;&gt;Use &amp;ldquo;is not&amp;rdquo; operator&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; foo &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Wrong:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; foo &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;always-use-a-def-statement&#34;&gt;Always use a def statement&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(x): &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Wrong:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;all-tryexcept-clauses&#34;&gt;all try/except clauses&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection[key]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyError&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; key_not_found(key)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; handle_value(value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Wrong:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Too broad!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; handle_value(collection[key])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyError&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Will also catch KeyError raised by handle_value()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; key_not_found(key)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;context-managers-should-be-invoked-through-separate-functions-or-methods&#34;&gt;Context managers should be invoked through separate functions or methods&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;begin_transaction():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    do_stuff_in_transaction(conn)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Wrong:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; conn:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    do_stuff_in_transaction(conn)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;be-consistent-in-return-statements&#34;&gt;Be consistent in return statements&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bar&lt;/span&gt;(x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Wrong:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bar&lt;/span&gt;(x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;startswith-endswith&#34;&gt;startswith, endswith&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &amp;lsquo;&amp;rsquo;.startswith() and &amp;lsquo;&amp;rsquo;.endswith() instead of string slicing to check for prefixes or suffixes.&lt;/li&gt;&#xA;&lt;li&gt;Correct:&#xA;if foo.startswith(&amp;lsquo;bar&amp;rsquo;):&lt;/li&gt;&#xA;&lt;li&gt;Wrong:&#xA;if foo[:3] == &amp;lsquo;bar&amp;rsquo;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;object-type-comparisons&#34;&gt;Object type comparisons&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correct:&#xA;if isinstance(obj, int):&lt;/li&gt;&#xA;&lt;li&gt;Wrong:&#xA;if type(obj) is type(1):&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;sequences-strings-lists-tuples&#34;&gt;Sequences, (strings, lists, tuples)&lt;/h2&gt;&#xA;&lt;p&gt;-For sequences, (strings, lists, tuples), use the fact that empty sequences are false:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Demystifying DevOps, MLOps, and DataOps</title>
      <link>http://localhost:1313/dsblog/Demystifying-DevOps-MLOps-and-DataOps/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><author>hari@dasarpai.com (Hari Thapliyaal)</author>
      <guid>http://localhost:1313/dsblog/Demystifying-DevOps-MLOps-and-DataOps/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/images/dspost/dsp6066-Demystifying-DevOps-MLOps-and-DataOps.jpg&#34; alt=&#34;All Resources to Learn Data Science&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;demystifying-devops-mlops-and-dataops&#34;&gt;Demystifying DevOps, MLOps, and DataOps:&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bridging the Gap between Software Development, Machine Learning, and Data Managemen&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;h2 id=&#34;what-is-devops&#34;&gt;What is DevOps&lt;/h2&gt;&#xA;&lt;p&gt;DevOps, short for Development and Operations, is a set of practices, principles, and cultural philosophies that aim to improve collaboration and efficiency between software development teams and IT operations teams. It emphasizes the integration of software development and IT operations, breaking down traditional silos and fostering a collaborative approach throughout the entire software delivery lifecycle.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
